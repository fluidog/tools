
CVEs fixed in 5.6:
  CVE-2020-27066: 4c59406ed00379c8663f8663d82b2537467ce9d7 xfrm: policy: Fix doulbe free in xfrm_policy_timer
  CVE-2021-3715: ef299cc3fa1a9e1288665a9fdc8bff55629fd359 net_sched: cls_route: remove the right filter from hashtable

CVEs fixed in 5.6.1:
  CVE-2020-11608: 0d16043ecbc6b0e6b972d215b9003e4f51d45db1 media: ov519: add missing endpoint sanity checks
  CVE-2020-11609: 57d103d5f219ac3fe842e4bbfa3f70e8d8be9352 media: stv06xx: add missing descriptor sanity checks
  CVE-2020-11668: c62dc65b5e8d0e5be21158ec2678ef4f2f0c739c media: xirlink_cit: add missing descriptor sanity checks
  CVE-2020-8835: 6797143df51c8ae259aa4bfe4e99c832b20bde8a bpf: Undo incorrect __reg_bound_offset32 handling

CVEs fixed in 5.6.3:
  CVE-2020-11565: 3c216b36aae719029f0431c67500d4eef9f77dd6 mm: mempolicy: require at least one nodeid for MPOL_PREFERRED

CVEs fixed in 5.6.4:
  CVE-2020-11494: 25af2eccd139a2823ca14036282592d329be7b6e slcan: Don't transmit uninitialized stack data in padding

CVEs fixed in 5.6.5:
  CVE-2019-19039: cc3c1509c8339447c259ba947acc594ed09d204c btrfs: Don't submit any btree write bio if the fs has errors
  CVE-2019-19377: cc3c1509c8339447c259ba947acc594ed09d204c btrfs: Don't submit any btree write bio if the fs has errors
  CVE-2020-12657: 0224307d9154db3c14d82a8d9d5aa18942a7eaf0 block, bfq: fix use-after-free in bfq_idle_slice_timer_body
  CVE-2020-12826: 7395ea4e65c2a00d23185a3f63ad315756ba9cef signal: Extend exec_id to 64bits

CVEs fixed in 5.6.7:
  CVE-2020-12659: 98d3c852e63b49129515dd18c875999efaf8530a xsk: Add missing check on user supplied headroom size

CVEs fixed in 5.6.8:
  CVE-2020-11884: 8a0e9d7867f59ca8067775fdaddb49aec8353268 s390/mm: fix page table upgrade vs 2ndary address mode accesses
  CVE-2020-12464: 00305f23aa666c814710d67631babb3300ce16c6 USB: core: Fix free-while-in-use bug in the USB S-Glibrary
  CVE-2020-29372: 7f4be3c45ce1c1a3f3ff7ff46f9f3b0f3fd48b78 mm: check that mm is still valid in madvise()

CVEs fixed in 5.6.11:
  CVE-2020-0255: eaa3a86bcb476c9172a62e58ecab86481eb477b9 selinux: properly handle multiple messages in selinux_netlink_send()
  CVE-2020-10751: eaa3a86bcb476c9172a62e58ecab86481eb477b9 selinux: properly handle multiple messages in selinux_netlink_send()

CVEs fixed in 5.6.12:
  CVE-2020-12770: 23ce3e2c4179b15dab7c8c2892ddbf80f0104d6f scsi: sg: add sg_remove_request in sg_write

CVEs fixed in 5.6.14:
  CVE-2020-10711: e6379c382a97246df6653cf4bc58c16d5ec03f5a netlabel: cope with NULL catmap
  CVE-2020-13143: 062e571afd9048bdc1d47d77a963fb662ce53246 USB: gadget: fix illegal array access in binding with UDC
  CVE-2020-27786: 343006873bc08b9bd8a22649ff131a6e752ac867 ALSA: rawmidi: Fix racy buffer resize under concurrent accesses

CVEs fixed in 5.6.15:
  CVE-2019-18814: 5362451d6955c7f611a7b41c01c1a9e9ff9b6d54 apparmor: Fix use-after-free in aa_audit_rule_init

CVEs fixed in 5.6.16:
  CVE-2020-10732: feb298333f54541cd747400dd45b13584b38bb32 fs/binfmt_elf.c: allocate initialized memory in fill_thread_core_info()

CVEs fixed in 5.6.17:
  CVE-2019-19462: ea6fe1d79ad03792f6f62804274d9c5ca9fa8391 kernel/relay.c: handle alloc_percpu returning NULL in relay_open
  CVE-2020-10757: 008c216f317bde31c3fd6fa9a4bc283814139e90 mm: Fix mremap not considering huge pmd devmap

CVEs fixed in 5.6.18:
  CVE-2020-0543: fed6c76f4965b47c159504496f460857e8c802ec x86/cpu: Add 'table' argument to cpu_matches()
  CVE-2020-13974: 9a17273f1efe47b0d773fef0a987ea28dafb92f2 vt: keyboard: avoid signed integer overflow in k_ascii

CVEs fixed in 5.6.19:
  CVE-2020-10766: bdfff7602c08463808a2f5417f83619f91473aa5 x86/speculation: Prevent rogue cross-process SSBD shutdown
  CVE-2020-10767: 1ed5e163b4ce60387849d77f1bea970e9de89819 x86/speculation: Avoid force-disabling IBPB based on STIBP and enhanced IBRS.
  CVE-2020-10768: 4e99f431cb2b82fb7ff11b3b6a410cbc527834c9 x86/speculation: PR_SPEC_FORCE_DISABLE enforcement for indirect branches.
  CVE-2020-29374: 465121c2c982c9438b6760c2161b50bec603c6e1 gup: document and work around "COW can break either way" issue
  CVE-2021-0342: f0943d9efcee73086cc280ba7f13dfbcd6bcb865 tun: correct header offsets in napi frags mode

Outstanding CVEs:
  CVE-2005-3660: (unk)  
  CVE-2007-3719: (unk)  
  CVE-2008-2544: (unk)  
  CVE-2008-4609: (unk)  
  CVE-2010-4563: (unk)  
  CVE-2010-5321: (unk)  
  CVE-2011-4917: (unk)  
  CVE-2012-4542: (unk)  
  CVE-2013-7445: (unk)  
  CVE-2015-2877: (unk)  
  CVE-2016-8660: (unk)  
  CVE-2017-13693: (unk)  
  CVE-2017-13694: (unk)  
  CVE-2018-1121: (unk)  
  CVE-2018-12928: (unk)  
  CVE-2018-12929: (unk)  
  CVE-2018-12930: (unk)  
  CVE-2018-12931: (unk)  
  CVE-2018-17977: (unk)  
  CVE-2019-0146: (unk)  
  CVE-2019-12456: (unk)  
  CVE-2019-15239: (unk) unknown 
  CVE-2019-15290: (unk)  
  CVE-2019-15794: (unk)  
  CVE-2019-15902: (unk) unknown 
  CVE-2019-16089: (unk)  
  CVE-2019-19378: (unk)  
  CVE-2019-19448: (unk) btrfs: only search for left_info if there is no right_info in try_merge_free_space 
  CVE-2019-19449: (unk) f2fs: fix to do sanity check on segment/section count 
  CVE-2019-19770: (unk) blktrace: fix debugfs use after free 
  CVE-2019-19814: (unk)  
  CVE-2019-20794: (unk)  
  CVE-2020-0347: (unk)  
  CVE-2020-0423: (unk) binder: fix UAF when releasing todo list 
  CVE-2020-0465: (unk) HID: core: Sanitize event code and type when mapping input 
  CVE-2020-0466: (unk) do_epoll_ctl(): clean the failure exits up a bit 
  CVE-2020-10135: (unk) Bluetooth: Consolidate encryption handling in hci_encrypt_cfm 
  CVE-2020-10708: (unk)  
  CVE-2020-10781: (unk) Revert "zram: convert remaining CLASS_ATTR() to CLASS_ATTR_RO()" 
  CVE-2020-11725: (unk)  
  CVE-2020-12351: (unk) Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel 
  CVE-2020-12352: (unk) Bluetooth: A2MP: Fix not initializing all members 
  CVE-2020-12362: (unk)  
  CVE-2020-12363: (unk) drm/i915/guc: Update to use firmware v49.0.1 
  CVE-2020-12364: (unk) drm/i915/guc: Update to use firmware v49.0.1 
  CVE-2020-12655: (unk) xfs: add agf freeblocks verify in xfs_agf_verify 
  CVE-2020-12656: (unk) sunrpc: check that domain table is empty at module unload. 
  CVE-2020-12771: (unk) bcache: fix potential deadlock problem in btree_gc_coalesce 
  CVE-2020-12888: (unk) vfio-pci: Invalidate mmaps and block MMIO access on disabled memory 
  CVE-2020-14304: (unk)  
  CVE-2020-14314: (unk) ext4: fix potential negative array index in do_split() 
  CVE-2020-14331: (unk) vgacon: Fix for missing check in scrollback handling 
  CVE-2020-14351: (unk) perf/core: Fix race in the perf_mmap_close() function 
  CVE-2020-14356: (unk) cgroup: fix cgroup_sk_alloc() for sk_clone_lock() 
  CVE-2020-14385: (unk) xfs: fix boundary test in xfs_attr_shortform_verify 
  CVE-2020-14386: (unk) net/packet: fix overflow in tpacket_rcv 
  CVE-2020-14390: (unk) fbcon: remove soft scrollback code 
  CVE-2020-15393: (unk) usb: usbtest: fix missing kfree(dev->buf) in usbtest_disconnect 
  CVE-2020-15436: (unk) block: Fix use-after-free in blkdev_get() 
  CVE-2020-15437: (unk) serial: 8250: fix null-ptr-deref in serial8250_start_tx() 
  CVE-2020-15780: (unk) ACPI: configfs: Disallow loading ACPI tables when locked down 
  CVE-2020-15802: (unk)  
  CVE-2020-15852: (unk) x86/ioperm: Fix io bitmap invalidation on Xen PV 
  CVE-2020-16119: (unk) dccp: don't duplicate ccid when cloning dccp sock 
  CVE-2020-16120: (unk) ovl: switch to mounter creds in readdir 
  CVE-2020-16166: (unk) random32: update the net random state on interrupt and activity 
  CVE-2020-24394: (unk) nfsd: apply umask on fs without ACL support 
  CVE-2020-24490: (unk) Bluetooth: fix kernel oops in store_pending_adv_report 
  CVE-2020-24502: (unk)  
  CVE-2020-24503: (unk)  
  CVE-2020-24504: (unk) ice: create scheduler aggregator node config and move VSIs 
  CVE-2020-24586: (unk) mac80211: prevent mixed key and fragment cache attacks 
  CVE-2020-24587: (unk) mac80211: prevent mixed key and fragment cache attacks 
  CVE-2020-24588: (unk) cfg80211: mitigate A-MSDU aggregation attacks 
  CVE-2020-25211: (unk) netfilter: ctnetlink: add a range check for l3/l4 protonum 
  CVE-2020-25212: (unk) nfs: Fix getxattr kernel panic and memory overflow 
  CVE-2020-25220: (unk)  
  CVE-2020-25284: (unk) rbd: require global CAP_SYS_ADMIN for mapping and unmapping 
  CVE-2020-25285: (unk) mm/hugetlb: fix a race between hugetlb sysctl handlers 
  CVE-2020-25639: (unk) drm/nouveau: bail out of nouveau_channel_new if channel init fails 
  CVE-2020-25641: (unk) block: allow for_each_bvec to support zero len bvec 
  CVE-2020-25643: (unk) hdlc_ppp: add range checks in ppp_cp_parse_cr() 
  CVE-2020-25645: (unk) geneve: add transport ports in route lookup for geneve 
  CVE-2020-25656: (unk) vt: keyboard, extend func_buf_lock to readers 
  CVE-2020-25668: (unk) tty: make FONTX ioctl use the tty pointer they were actually passed 
  CVE-2020-25669: (unk) Input: sunkbd - avoid use-after-free in teardown paths 
  CVE-2020-25670: (unk) nfc: fix refcount leak in llcp_sock_bind() 
  CVE-2020-25671: (unk) nfc: fix refcount leak in llcp_sock_connect() 
  CVE-2020-25672: (unk) nfc: fix memory leak in llcp_sock_connect() 
  CVE-2020-25673: (unk) nfc: Avoid endless loops caused by repeated llcp_sock_connect() 
  CVE-2020-25704: (unk) perf/core: Fix a memory leak in perf_event_parse_addr_filter() 
  CVE-2020-25705: (unk) icmp: randomize the global rate limiter 
  CVE-2020-26088: (unk) net/nfc/rawsock.c: add CAP_NET_RAW check. 
  CVE-2020-26139: (unk) mac80211: do not accept/forward invalid EAPOL frames 
  CVE-2020-26140: (unk)  
  CVE-2020-26141: (unk) ath10k: Fix TKIP Michael MIC verification for PCIe 
  CVE-2020-26142: (unk)  
  CVE-2020-26143: (unk)  
  CVE-2020-26145: (unk) ath10k: drop fragments with multicast DA for PCIe 
  CVE-2020-26147: (unk) mac80211: assure all fragments are encrypted 
  CVE-2020-26541: (unk) certs: Add EFI_CERT_X509_GUID support for dbx entries 
  CVE-2020-26555: (unk)  
  CVE-2020-26556: (unk)  
  CVE-2020-26557: (unk)  
  CVE-2020-26558: (unk) Bluetooth: SMP: Fail if remote and local public keys are identical 
  CVE-2020-26559: (unk)  
  CVE-2020-26560: (unk)  
  CVE-2020-27152: (unk) KVM: ioapic: break infinite recursion on lazy EOI 
  CVE-2020-27673: (unk) xen/events: add a proper barrier to 2-level uevent unmasking 
  CVE-2020-27675: (unk) xen/events: avoid removing an event channel while handling it 
  CVE-2020-27777: (unk) powerpc/rtas: Restrict RTAS requests from userspace 
  CVE-2020-27815: (unk) jfs: Fix array index bounds check in dbAdjTree 
  CVE-2020-27820: (unk)  
  CVE-2020-27825: (unk) tracing: Fix race in trace_open and buffer resize call 
  CVE-2020-27830: (unk) speakup: Reject setting the speakup line discipline outside of speakup 
  CVE-2020-27835: (unk) IB/hfi1: Ensure correct mm is used at all times 
  CVE-2020-28097: (unk) vgacon: remove software scrollback support 
  CVE-2020-28374: (unk) scsi: target: Fix XCOPY NAA identifier lookup 
  CVE-2020-28588: (unk) lib/syscall: fix syscall registers retrieval on 32-bit platforms 
  CVE-2020-28915: (unk) fbcon: Fix global-out-of-bounds read in fbcon_get_font() 
  CVE-2020-28941: (unk) speakup: Do not let the line discipline be used several times 
  CVE-2020-28974: (unk) vt: Disable KD_FONT_OP_COPY 
  CVE-2020-29368: (unk) mm: thp: make the THP mapcount atomic against __split_huge_pmd_locked() 
  CVE-2020-29369: (unk) mm/mmap.c: close race between munmap() and expand_upwards()/downwards() 
  CVE-2020-29371: (unk) romfs: fix uninitialized memory leak in romfs_dev_read() 
  CVE-2020-29534: (unk) io_uring: don't rely on weak ->files references 
  CVE-2020-29568: (unk) xen/xenbus: Allow watches discard events before queueing 
  CVE-2020-29569: (unk) xen-blkback: set ring->xenblkd to NULL after kthread_stop() 
  CVE-2020-29660: (unk) tty: Fix ->session locking 
  CVE-2020-29661: (unk) tty: Fix ->pgrp locking in tiocspgrp() 
  CVE-2020-35501: (unk)  
  CVE-2020-35508: (unk) fork: fix copy_process(CLONE_PARENT) race with the exiting ->real_parent 
  CVE-2020-35519: (unk) net/x25: prevent a couple of overflows 
  CVE-2020-36158: (unk) mwifiex: Fix possible buffer overflows in mwifiex_cmd_802_11_ad_hoc_start 
  CVE-2020-36310: (unk) KVM: SVM: avoid infinite loop on NPF from bad address 
  CVE-2020-36311: (unk) KVM: SVM: Periodically schedule when unregistering regions on destroy 
  CVE-2020-36312: (unk) KVM: fix memory leak in kvm_io_bus_unregister_dev() 
  CVE-2020-36313: (unk) KVM: Fix out of range accesses to memslots 
  CVE-2020-36322: (unk) fuse: fix bad inode 
  CVE-2020-36385: (unk) RDMA/ucma: Rework ucma_migrate_id() to avoid races with destroy 
  CVE-2020-36386: (unk) Bluetooth: Fix slab-out-of-bounds read in hci_extended_inquiry_result_evt() 
  CVE-2020-3702: (unk) ath: Use safer key clearing with key cache entries 
  CVE-2020-4788: (unk) powerpc/64s: flush L1D on kernel entry 
  CVE-2020-8694: (unk) powercap: restrict energy meter to root access 
  CVE-2021-0129: (unk) Bluetooth: SMP: Fail if remote and local public keys are identical 
  CVE-2021-0399: (unk)  
  CVE-2021-0448: (unk) netfilter: ctnetlink: add a range check for l3/l4 protonum 
  CVE-2021-0512: (unk) HID: make arrays usage and value to be the same 
  CVE-2021-0605: (unk) af_key: pfkey_dump needs parameter validation 
  CVE-2021-0606: (unk)  
  CVE-2021-0695: (unk)  
  CVE-2021-0936: (unk)  
  CVE-2021-0937: (unk) netfilter: x_tables: fix compat match/target pad out-of-bound write 
  CVE-2021-0938: (unk) compiler.h: fix barrier_data() on clang 
  CVE-2021-0941: (unk) bpf: Remove MTU check in __bpf_skb_max_len 
  CVE-2021-1048: (unk)  
  CVE-2021-20194: (unk) io_uring: don't rely on weak ->files references 
  CVE-2021-20226: (unk) io_uring: don't rely on weak ->files references 
  CVE-2021-20239: (unk) net: pass a sockptr_t into ->setsockopt 
  CVE-2021-20292: (unk) drm/ttm/nouveau: don't call tt destroy callback on alloc failure. 
  CVE-2021-20320: (unk) s390/bpf: Fix optimizing out zero-extensions 
  CVE-2021-20321: (unk) ovl: fix missing negative dentry check in ovl_rename() 
  CVE-2021-20322: (unk) ipv6: make exception cache less predictible 
  CVE-2021-21781: (unk) ARM: ensure the signal page contains defined contents 
  CVE-2021-22543: (unk) KVM: do not allow mapping valid but non-reference-counted pages 
  CVE-2021-22555: (unk) netfilter: x_tables: fix compat match/target pad out-of-bound write 
  CVE-2021-23133: (unk) net/sctp: fix race condition in sctp_destroy_sock 
  CVE-2021-26708: (unk) vsock: fix the race conditions in multi-transport support 
  CVE-2021-26930: (unk) xen-blkback: fix error handling in xen_blkbk_map() 
  CVE-2021-26931: (unk) xen-blkback: don't "handle" error by BUG() 
  CVE-2021-26932: (unk) Xen/x86: don't bail early from clear_foreign_p2m_mapping() 
  CVE-2021-26934: (unk)  
  CVE-2021-27363: (unk) scsi: iscsi: Restrict sessions and handles to admin capabilities 
  CVE-2021-27364: (unk) scsi: iscsi: Restrict sessions and handles to admin capabilities 
  CVE-2021-27365: (unk) scsi: iscsi: Ensure sysfs attributes are limited to PAGE_SIZE 
  CVE-2021-28038: (unk) Xen/gnttab: handle p2m update errors on a per-slot basis 
  CVE-2021-28375: (unk) misc: fastrpc: restrict user apps from sending kernel RPC messages 
  CVE-2021-28660: (unk) staging: rtl8188eu: prevent ->ssid overflow in rtw_wx_set_scan() 
  CVE-2021-28688: (unk) xen-blkback: don't leak persistent grants from xen_blkbk_map() 
  CVE-2021-28691: (unk) xen-netback: take a reference to the RX task thread 
  CVE-2021-28951: (unk) io_uring: ensure that SQPOLL thread is started for exit 
  CVE-2021-28964: (unk) btrfs: fix race when cloning extent buffer during rewind of an old root 
  CVE-2021-28971: (unk) perf/x86/intel: Fix a crash caused by zero PEBS status 
  CVE-2021-28972: (unk) PCI: rpadlpar: Fix potential drc_name corruption in store functions 
  CVE-2021-29154: (unk) bpf, x86: Validate computation of branch displacements for x86-64 
  CVE-2021-29155: (unk) bpf: Use correct permission flag for mixed signed bounds arithmetic 
  CVE-2021-29264: (unk) gianfar: fix jumbo packets+napi+rx overrun crash 
  CVE-2021-29265: (unk) usbip: fix stub_dev usbip_sockfd_store() races leading to gpf 
  CVE-2021-29646: (unk) tipc: better validate user input in tipc_nl_retrieve_key() 
  CVE-2021-29647: (unk) net: qrtr: fix a kernel-infoleak in qrtr_recvmsg() 
  CVE-2021-29650: (unk) netfilter: x_tables: Use correct memory barriers. 
  CVE-2021-30002: (unk) media: v4l: ioctl: Fix memory leak in video_usercopy 
  CVE-2021-3178: (unk) nfsd4: readdirplus shouldn't return parent of export 
  CVE-2021-31829: (unk) bpf: Fix masking negation logic upon negative dst register 
  CVE-2021-31916: (unk) dm ioctl: fix out of bounds array access when no devices 
  CVE-2021-32078: (unk) ARM: footbridge: remove personal server platform 
  CVE-2021-32399: (unk) bluetooth: eliminate the potential race condition when removing the HCI controller 
  CVE-2021-33033: (unk) cipso,calipso: resolve a number of problems with the DOI refcounts 
  CVE-2021-33034: (unk) Bluetooth: verify AMP hci_chan before amp_destroy 
  CVE-2021-3347: (unk) futex: Ensure the correct return value from futex_lock_pi() 
  CVE-2021-3348: (unk) nbd: freeze the queue while we're adding connections 
  CVE-2021-33624: (unk) bpf: Inherit expanded/patched seen count from old aux data 
  CVE-2021-33909: (unk) seq_file: disallow extremely large seq buffer allocations 
  CVE-2021-3411: (unk) x86/kprobes: Fix optprobe to detect INT3 padding correctly 
  CVE-2021-3428: (unk) ext4: handle error of ext4_setup_system_zone() on remount 
  CVE-2021-3444: (unk) bpf: Fix truncation handling for mod32 dst reg wrt zero 
  CVE-2021-34556: (unk) bpf: Introduce BPF nospec instruction for mitigating Spectre v4 
  CVE-2021-34693: (unk) can: bcm: fix infoleak in struct bcm_msg_head 
  CVE-2021-3483: (unk) firewire: nosy: Fix a use-after-free bug in nosy_ioctl() 
  CVE-2021-34866: (unk) bpf: Fix ringbuf helper function compatibility 
  CVE-2021-34981: (unk) Bluetooth: cmtp: fix file refcount when cmtp_attach_device fails 
  CVE-2021-35039: (unk) module: limit enabling module.sig_enforce 
  CVE-2021-3506: (unk) f2fs: fix to avoid out-of-bounds memory access 
  CVE-2021-3542: (unk)  
  CVE-2021-35477: (unk) bpf: Introduce BPF nospec instruction for mitigating Spectre v4 
  CVE-2021-3564: (unk) Bluetooth: fix the erroneous flush_work() order 
  CVE-2021-3573: (unk) Bluetooth: use correct lock to prevent UAF of hdev object 
  CVE-2021-3587: (unk) nfc: fix NULL ptr dereference in llcp_sock_getname() after failed connect 
  CVE-2021-3600: (unk) bpf: Fix 32 bit src register truncation on div/mod 
  CVE-2021-3609: (unk) can: bcm: delay release of struct bcm_op after synchronize_rcu() 
  CVE-2021-3612: (unk) Input: joydev - prevent potential read overflow in ioctl 
  CVE-2021-3640: (unk)  
  CVE-2021-3653: (unk) KVM: nSVM: avoid picking up unsupported bits from L2 in int_ctl (CVE-2021-3653) 
  CVE-2021-3655: (unk) sctp: validate from_addr_param return 
  CVE-2021-3656: (unk) KVM: nSVM: always intercept VMLOAD/VMSAVE when nested (CVE-2021-3656) 
  CVE-2021-3659: (unk) net: mac802154: Fix general protection fault 
  CVE-2021-3669: (unk) ipc: replace costly bailout check in sysvipc_find_ipc() 
  CVE-2021-3679: (unk) tracing: Fix bug in rb_per_cpu_empty() that might cause deadloop. 
  CVE-2021-37159: (unk) usb: hso: fix error handling code of hso_create_net_device 
  CVE-2021-3732: (unk) ovl: prevent private clone if bind mount is not allowed 
  CVE-2021-3739: (unk) btrfs: fix NULL pointer dereference when deleting device by invalid id 
  CVE-2021-3743: (unk) net: qrtr: fix OOB Read in qrtr_endpoint_post 
  CVE-2021-3744: (unk) crypto: ccp - fix resource leaks in ccp_run_aes_gcm_cmd() 
  CVE-2021-3752: (unk)  
  CVE-2021-3753: (unk) vt_kdsetmode: extend console locking 
  CVE-2021-37576: (unk) KVM: PPC: Book3S: Fix H_RTAS rets buffer overflow 
  CVE-2021-3759: (unk) memcg: enable accounting of ipc resources 
  CVE-2021-3760: (unk) nfc: nci: fix the UAF of rf_conn_info object 
  CVE-2021-3764: (unk) crypto: ccp - fix resource leaks in ccp_run_aes_gcm_cmd() 
  CVE-2021-3772: (unk) sctp: use init_tag from inithdr for ABORT chunk 
  CVE-2021-38160: (unk) virtio_console: Assure used length from device is limited 
  CVE-2021-38166: (unk) bpf: Fix integer overflow involving bucket_size 
  CVE-2021-38198: (unk) KVM: X86: MMU: Use the correct inherited permissions to get shadow page 
  CVE-2021-38199: (unk) NFSv4: Initialise connection to the server in nfs4_alloc_client() 
  CVE-2021-38204: (unk) usb: max-3421: Prevent corruption of freed memory 
  CVE-2021-38205: (unk) net: xilinx_emaclite: Do not print real IOMEM pointer 
  CVE-2021-38207: (unk) net: ll_temac: Fix TX BD buffer overwrite 
  CVE-2021-38208: (unk) nfc: fix NULL ptr dereference in llcp_sock_getname() after failed connect 
  CVE-2021-38300: (unk) bpf, mips: Validate conditional branch offsets 
  CVE-2021-3847: (unk)  
  CVE-2021-3892: (unk)  
  CVE-2021-3896: (unk) isdn: cpai: check ctr->cnr to avoid array index out of bound 
  CVE-2021-40490: (unk) ext4: fix race writing to an inline_data file while its xattrs are changing 
  CVE-2021-41864: (unk) bpf: Fix integer overflow in prealloc_elems_and_freelist() 
  CVE-2021-42008: (unk) net: 6pack: fix slab-out-of-bounds in decode_data 
  CVE-2021-42252: (unk) soc: aspeed: lpc-ctrl: Fix boundary check for mmap 
  CVE-2021-42327: (unk) drm/amdgpu: fix out of bounds write 
  CVE-2021-42739: (unk)  
  CVE-2021-43056: (unk) KVM: PPC: Book3S HV: Make idle_kvm_start_guest() return 0 if it went to guest 
  CVE-2021-43057: (unk) selinux,smack: fix subjective/objective credential use mixups 
